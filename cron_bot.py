import os
import datetime
from slack_sdk import WebClient
from redis_bot import generate_message_from_redis, set_thread_ts

client = WebClient(token=os.environ.get("SLACK_BOT_TOKEN"))
CHANNEL_ID = os.environ.get("SLACK_CHANNEL_ID")

def generate_message():
    #–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Slack –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Redis
    message = generate_message_from_redis()

    if "_–ù–µ—Ç –∑–∞–¥–∞—á –Ω–∞ —Å–µ–≥–æ–¥–Ω—è_" in message:
        print("‚ö†Ô∏è –ó–∞–¥–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ Redis, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É")
        today = datetime.datetime.now()
        date_str = today.strftime('%d %B (%A)')

        empty_redis_message = [
            "No tasks found in Redis, check BD"
        ]

        header = f"üéì Routine tasks for *{date_str}*"
        return header + "\n\n" + "\n".join(empty_redis_message)

    return message

if __name__ == "__main__":
    today = datetime.datetime.today()
    if today.weekday() < 5:  # 0‚Äì4: Monday‚ÄìFriday
        try:
            message = generate_message()
            response = client.chat_postMessage(channel=CHANNEL_ID, text=message)
            set_thread_ts(response["ts"])
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Slack")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    else:
        print("–°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π, –∑–∞–¥–∞—á–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è")
